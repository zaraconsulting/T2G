{"ast":null,"code":"var _jsxFileName = \"/home/derek/Development/zara_consulting/apps/t2g/t2g-cms/frontend/src/contexts/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport firebase from '../util/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState({\n    loggedIn: false\n  });\n  const auth = new firebase.auth.EmailAuthProvider();\n\n  function signIn(e, p) {\n    return firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n      firebase.auth().sign(auth);\n    }).catch(err => {\n      console.error(`${err.code}\\n${err.message}`);\n    });\n  }\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        setCurrentUser({\n          user: {\n            id: user.uid,\n            email: user.email\n          },\n          loggedIn: true\n        });\n      } else {\n        setCurrentUser({\n          loggedIn: false\n        });\n      }\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    signIn\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AuthProvider, \"2bTO6xhbyu21yGNDed9VuG/s7sg=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/derek/Development/zara_consulting/apps/t2g/t2g-cms/frontend/src/contexts/AuthContext.js"],"names":["React","useEffect","useState","useContext","firebase","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loggedIn","auth","EmailAuthProvider","signIn","e","p","setPersistence","Auth","Persistence","LOCAL","then","sign","catch","err","console","error","code","message","unsubscribe","onAuthStateChanged","user","id","uid","email","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACtB,SAAOJ,UAAU,CAACE,WAAD,CAAjB;AACH;;GAFeE,O;;AAIhB,OAAO,MAAMC,YAAY,GAAG,CAAE;AAAEC,EAAAA;AAAF,CAAF,KAAoB;AAAA;;AAC5C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC;AAAEU,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAA9C;AACA,QAAMC,IAAI,GAAG,IAAIT,QAAQ,CAACS,IAAT,CAAcC,iBAAlB,EAAb;;AAEA,WAASC,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAClB,WAAOb,QAAQ,CAACS,IAAT,GAAgBK,cAAhB,CAA+Bd,QAAQ,CAACS,IAAT,CAAcM,IAAd,CAAmBC,WAAnB,CAA+BC,KAA9D,EACMC,IADN,CACW,MAAM;AACRlB,MAAAA,QAAQ,CAACS,IAAT,GAAgBU,IAAhB,CAAqBV,IAArB;AACH,KAHN,EAIMW,KAJN,CAIYC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAe,GAAEF,GAAG,CAACG,IAAK,KAAIH,GAAG,CAACI,OAAQ,EAA1C;AACH,KANN,CAAP;AAOH;;AAED5B,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM6B,WAAW,GAAG1B,QAAQ,CAACS,IAAT,GAAgBkB,kBAAhB,CAAmCC,IAAI,IAAI;AAC3D,UAAIA,IAAJ,EAAU;AACNrB,QAAAA,cAAc,CACV;AACIqB,UAAAA,IAAI,EAAE;AACFC,YAAAA,EAAE,EAAED,IAAI,CAACE,GADP;AAEFC,YAAAA,KAAK,EAAEH,IAAI,CAACG;AAFV,WADV;AAKIvB,UAAAA,QAAQ,EAAE;AALd,SADU,CAAd;AASH,OAVD,MAUO;AACHD,QAAAA,cAAc,CAAC;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAD,CAAd;AACH;AACJ,KAdmB,CAApB;AAeA,WAAOkB,WAAP;AACH,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,QAAMM,KAAK,GAAG;AAAE1B,IAAAA,WAAF;AAAeK,IAAAA;AAAf,GAAd;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEqB,KAA7B;AAAA,cACM3B;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxCM;;IAAMD,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport firebase from '../util/firebase';\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport const AuthProvider = ( { children } ) => {\n    const [currentUser, setCurrentUser] = useState({ loggedIn: false });\n    const auth = new firebase.auth.EmailAuthProvider();\n\n    function signIn(e, p) {\n        return firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n                    .then(() => {\n                        firebase.auth().sign(auth);\n                    })\n                    .catch(err => {\n                        console.error(`${err.code}\\n${err.message}`)\n                    })\n    }\n\n    useEffect(() => {\n        const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                setCurrentUser(\n                    {\n                        user: {\n                            id: user.uid,\n                            email: user.email\n                        },\n                        loggedIn: true \n                    }\n                );\n            } else {\n                setCurrentUser({ loggedIn: false });\n            }\n        });\n        return unsubscribe;\n    }, []);\n\n    const value = { currentUser, signIn };\n\n    return (\n        <AuthContext.Provider value={value}>\n            { children }\n        </AuthContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}