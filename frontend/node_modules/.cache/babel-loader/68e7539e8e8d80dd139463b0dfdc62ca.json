{"ast":null,"code":"var _jsxFileName = \"/home/derek/Development/zara_consulting/apps/t2g/t2g-cms/frontend/src/contexts/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport firebase from '../util/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState({\n    loggedIn: false\n  });\n  const auth = new firebase.auth.EmailAuthProvider();\n\n  function signIn(e, p) {\n    firebase.auth().signInWithEmailAndPassword(e, p).then(userCredential => {\n      // Signed in\n      var user = userCredential.user;\n      console.log(user);\n    }).catch(err => {\n      console.error(`${err.code}\\n${err.message}`);\n    });\n  }\n\n  function register(e, p) {\n    firebase.auth().createUserWithEmailAndPassword(e, p).then(userCredential => {\n      // Signed in\n      var user = userCredential.user;\n      console.log(user);\n    });\n  }\n\n  function logout() {\n    firebase.auth().signOut().then(() => {\n      // Sign-in successful\n      console.log('User logged out successfully');\n    });\n  }\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        setCurrentUser({\n          user: user,\n          loggedIn: true\n        });\n      } else {\n        setCurrentUser({\n          loggedIn: false\n        });\n      }\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    signIn,\n    register\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AuthProvider, \"2bTO6xhbyu21yGNDed9VuG/s7sg=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/derek/Development/zara_consulting/apps/t2g/t2g-cms/frontend/src/contexts/AuthContext.js"],"names":["React","useEffect","useState","useContext","firebase","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loggedIn","auth","EmailAuthProvider","signIn","e","p","signInWithEmailAndPassword","then","userCredential","user","console","log","catch","err","error","code","message","register","createUserWithEmailAndPassword","logout","signOut","unsubscribe","onAuthStateChanged","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACtB,SAAOJ,UAAU,CAACE,WAAD,CAAjB;AACH;;GAFeE,O;;AAIhB,OAAO,MAAMC,YAAY,GAAG,CAAE;AAAEC,EAAAA;AAAF,CAAF,KAAoB;AAAA;;AAC5C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC;AAAEU,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAA9C;AACA,QAAMC,IAAI,GAAG,IAAIT,QAAQ,CAACS,IAAT,CAAcC,iBAAlB,EAAb;;AAEA,WAASC,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EACA;AACIb,IAAAA,QAAQ,CAACS,IAAT,GAAgBK,0BAAhB,CAA2CF,CAA3C,EAA8CC,CAA9C,EACKE,IADL,CACUC,cAAc,IAAI;AACpB;AACA,UAAIC,IAAI,GAAGD,cAAc,CAACC,IAA1B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KALL,EAMKG,KANL,CAMWC,GAAG,IAAI;AACVH,MAAAA,OAAO,CAACI,KAAR,CAAe,GAAGD,GAAG,CAACE,IAAM,KAAKF,GAAG,CAACG,OAAS,EAA9C;AACH,KARL;AASH;;AAED,WAASC,QAAT,CAAkBb,CAAlB,EAAqBC,CAArB,EACA;AACIb,IAAAA,QAAQ,CAACS,IAAT,GAAgBiB,8BAAhB,CAA+Cd,CAA/C,EAAkDC,CAAlD,EACKE,IADL,CACUC,cAAc,IAAI;AACpB;AACA,UAAIC,IAAI,GAAGD,cAAc,CAACC,IAA1B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACP,KALD;AAOH;;AAED,WAASU,MAAT,GACA;AACI3B,IAAAA,QAAQ,CAACS,IAAT,GAAgBmB,OAAhB,GACKb,IADL,CACU,MAAM;AACZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACF,KAJF;AAKH;;AAEDtB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgC,WAAW,GAAG7B,QAAQ,CAACS,IAAT,GAAgBqB,kBAAhB,CAAmCb,IAAI,IAAI;AAC3D,UAAIA,IAAJ,EAAU;AACNV,QAAAA,cAAc,CACV;AACIU,UAAAA,IAAI,EAAEA,IADV;AAEIT,UAAAA,QAAQ,EAAE;AAFd,SADU,CAAd;AAMH,OAPD,MAOO;AACHD,QAAAA,cAAc,CAAC;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAD,CAAd;AACH;AACJ,KAXmB,CAApB;AAYA,WAAOqB,WAAP;AACH,GAdQ,EAcN,EAdM,CAAT;AAgBA,QAAME,KAAK,GAAG;AAAEzB,IAAAA,WAAF;AAAeK,IAAAA,MAAf;AAAuBc,IAAAA;AAAvB,GAAd;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEM,KAA7B;AAAA,cACM1B;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA5DM;;IAAMD,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport firebase from '../util/firebase';\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport const AuthProvider = ( { children } ) => {\n    const [currentUser, setCurrentUser] = useState({ loggedIn: false });\n    const auth = new firebase.auth.EmailAuthProvider();\n\n    function signIn(e, p) \n    {\n        firebase.auth().signInWithEmailAndPassword(e, p)\n            .then(userCredential => {\n                // Signed in\n                var user = userCredential.user\n                console.log(user)\n            })\n            .catch(err => {\n                console.error(`${ err.code }\\n${ err.message }`)\n            })\n    }\n\n    function register(e, p)\n    {\n        firebase.auth().createUserWithEmailAndPassword(e, p)\n            .then(userCredential => {\n                // Signed in\n                var user = userCredential.user\n                console.log(user)\n        })\n\n    }\n\n    function logout()\n    {\n        firebase.auth().signOut()\n            .then(() => {\n            // Sign-in successful\n            console.log('User logged out successfully')\n         })   \n    }\n\n    useEffect(() => {\n        const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                setCurrentUser(\n                    {\n                        user: user,\n                        loggedIn: true \n                    }\n                );\n            } else {\n                setCurrentUser({ loggedIn: false });\n            }\n        });\n        return unsubscribe;\n    }, []);\n\n    const value = { currentUser, signIn, register };\n\n    return (\n        <AuthContext.Provider value={value}>\n            { children }\n        </AuthContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}